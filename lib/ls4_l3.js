{"t":2, 	
"vType":[ 4, 4, 4 ], 	
"k":[ 1, 1, 1 ], 	
"l":[ 3, 0 ], 	
"b":[ 48 ], 	
"negatives":0, 	
"number_up_to_isomorphism":2424, 	
"total_number":152956608, 	
"notes":[], 	
"tags":[], 	
"enumeration":[
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 9 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 1, 5, 9)( 2, 8,11)( 3, 6,12)( 4, 7,10),   ( 2, 3)( 5, 9)( 6,11)( 7,10)( 8,12),   ( 1, 6, 9)( 2, 5,10)( 3, 8,11)( 4, 7,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 2, 3)( 6, 7)(10,11), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 5, 9)( 2, 6,10)( 3, 8,12, 4, 7,11),   ( 1, 6, 9)( 2, 5,10)( 3, 8,12)( 4, 7,11),   ( 1,11, 4,10, 2,12, 3, 9)( 5, 7, 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 3)( 2, 4)( 7, 8)( 9,11)(10,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 7, 6, 8)( 9,11,10,12),   ( 5, 9)( 6,10)( 7,12)( 8,11), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12),   ( 1, 6, 2, 5)( 3, 8, 4, 7)( 9,10)(11,12),   ( 3, 4)( 5,11, 6,12)( 7,10, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5,11)( 6,12)( 7, 9)( 8,10), ( 3, 4)( 7, 8)(11,12), ( 3, 4)( 5, 6)( 9,10)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(10,12),   ( 1,10, 7, 3,12, 5)( 2,11, 8)( 4, 9, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 6, 8)( 9,11), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5,10)( 6, 9)( 7,12)( 8,11), ( 2, 4)( 6, 8)(10,12), ( 2, 4)( 5, 7)( 9,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,10, 5)( 2, 9, 6)( 3,12, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 3, 4)( 7, 8)(11,12),   ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12),   ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 4)( 6, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 4)( 6, 8)(10,12),   ( 2, 3, 4)( 6, 7, 8)(10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 3)( 6, 7)(10,11),   ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,11)( 8,10), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 1, 2)( 3, 4)( 6, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 6, 8)( 9,10)(11,12), ( 5, 6, 7, 8)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,11)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11),   ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12),   ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12), ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12), ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12), ( 1, 9)( 2,10)( 3,12)( 4,11)( 7, 8),   ( 3, 4)( 5, 6)( 9,10), ( 1, 3, 2, 4)( 7, 8)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 3)( 2, 4)( 9,11)(10,12),   ( 1, 9)( 2,10)( 3,11)( 4,12), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11), ( 3, 4)( 7, 8)(11,12),   ( 3, 4)( 5, 6)( 9,10), ( 1, 3, 2, 4)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 3)( 2, 4)( 7, 8)( 9,11)(10,12),   ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11), ( 1, 3)( 2, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,11)(10,12), ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12), ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12)( 7, 8), ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12), ( 1,10, 2, 9)( 3,12, 4,11)( 5, 6)    ( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12),   ( 1, 5, 9)( 2, 6,10)( 3, 8,12, 4, 7,11), ( 1,10, 2, 9)( 3,12, 4,11)( 5, 6)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,10)( 7,12)( 8,11), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 7, 8)(11,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 3, 4)( 7, 8)(11,12),   ( 1,10, 5)( 2, 9, 6)( 3,12, 7, 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,10)( 6, 9)( 7,11)( 8,12),   ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 3, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,10, 5)( 2, 9, 6)( 3,12, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 3, 4)( 7, 8)(11,12),   ( 1,10, 5)( 2, 9, 6)( 3,12, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,12, 8)( 4,11, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,11, 8)( 4,12, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,11, 8)( 4,12, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,11, 8)( 4,12, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,12, 8)( 4,11, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 2, 3, 4)( 5, 9)( 6,11, 8,10, 7,12),   ( 2, 3, 4)( 5,10, 8, 9, 6,12)( 7,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3, 4)( 6, 7, 8)(10,11,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6, 8, 7)( 9,10,12,11), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,11)( 8,10),   ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12),   ( 3, 4)( 5, 9)( 6,12)( 7,11)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3, 4)( 6, 7, 8)(10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3, 4)( 6, 7, 8)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,12)( 6,11)( 7,10)( 8, 9)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 8)( 6, 7)( 9,12)(10,11),   ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 7, 6, 8)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7, 6, 8)( 9,11,10,12),   ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 2, 3)( 5, 9)( 6,12)( 7,11)( 8,10),   ( 2, 3)( 5,10, 7,12)( 6,11, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 9)( 6,12)( 7,11)( 8,10),   ( 2, 3)( 5,10, 7,12)( 6,11, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 5, 6, 7, 8)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,11)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,11)( 8,10),   ( 2, 4)( 5, 6, 7, 8)( 9,10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6, 7, 8)( 9,10,11,12),   ( 2, 4)( 5, 9)( 6,12)( 7,11)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,11)( 8,10), ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 2, 3)( 5, 6)( 9,10),   ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 2, 3)( 5,10, 7,12)( 6,11, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 2, 3)( 5, 7)( 9,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 2, 3)( 5,11)( 6,10)( 7, 9)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 8)(10,12), ( 2, 3)( 5,11)( 6,10)( 7, 9)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 2, 4, 3), ( 6, 7)(10,11), ( 5, 9)( 6,11)( 7,10)( 8,12),   ( 5, 9)( 6,12)( 7,11)( 8,10), ( 5, 6, 8)( 9,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3), ( 3, 4), ( 5, 6)( 9,10), ( 6, 7)(10,11), ( 7, 8)(11,12),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,10, 8)( 3,11, 6)( 4,12, 7),   ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11), ( 1, 6, 3, 8, 2, 5)( 4, 7)( 9,10,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 6, 8)( 9,11), ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11),   ( 2, 3)( 5, 6)( 9,10), ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,10)( 3, 6,11)( 4, 7,12),   ( 1, 3)( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,11)( 6, 9)( 7,12)( 8,10),   ( 1, 5, 9)( 2, 8,10)( 3, 6,11)( 4, 7,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 9,10), ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12), ( 2, 3)( 5, 6)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11),   ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11),   ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10)( 6, 7),   ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11),   ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 7,10)( 3, 8,12)( 4, 6,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 7,10)( 3, 8,12)( 4, 6,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(10,11),   ( 1, 6, 2, 5)( 3, 8, 4, 7)( 9,10,12,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(10,11),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(10,11),   ( 1, 6, 2, 5)( 3, 8, 4, 7)( 9,10,12,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(10,11),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 2)( 3, 4)( 7, 8)( 9,11)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 7, 8)( 9,11)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 2)( 3, 4)( 7, 8)( 9,11)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 7, 8)( 9,11)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 1, 2)( 6, 8)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 6, 8)( 9,11), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5,10)( 6,11)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5,10)( 6,11)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 9 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11), ( 3, 4)( 5, 6)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 9,10), ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11), ( 3, 4)( 5, 6)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 9,10), ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11), ( 5,10)( 6, 9)( 7,12)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 9,10), ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5,10)( 6, 9)( 7,12)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,11)( 8,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 9,10), ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 2, 3)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 2, 4)( 5,10)( 6, 9)( 7,11)( 8,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 2, 3)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11), ( 5, 6)( 7, 8)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 6)( 7, 8)( 9,10)(11,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 6)( 7, 8)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 2, 3)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 2, 3)( 5, 6)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 7, 8)(11,12), ( 2, 3)( 5, 6)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,10)( 7,11)( 8,12), ( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4), ( 5, 6)( 9,10), ( 5, 9)( 6,10)( 7,11)( 8,12),   ( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,12)( 3,10)( 4,11),   ( 1, 5, 9)( 2, 7,12, 3, 6,10)( 4, 8,11),   ( 1,12, 5, 2, 9, 6)( 3,10, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 9,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 2, 3)( 6, 7)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12),   ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7, 9)( 8,11),   ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12), ( 1, 3)( 2, 4)( 5, 7)( 9,10)(11,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12), ( 1, 3)( 2, 4)( 5, 7)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 1, 3)( 5, 7)( 6, 8)( 9,10)(11,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 7)( 6, 8)( 9,10)(11,12), ( 5, 9)( 6,12)( 7,10)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8),   ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11),   ( 1, 3)( 2, 4)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8)( 9,10)(11,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12), ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7, 9)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7, 9)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,11, 7)( 3,10, 8)( 4,12, 6),   ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12), ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(10,11),   ( 1, 2)( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12),   ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12), ( 2, 3, 4)( 6, 7, 8)(10,12,11),   ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 1, 2)( 5,11)( 6,12)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 9)( 6,10)( 7,11)( 8,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11)( 6, 8),   ( 1, 6)( 2, 5)( 3, 8)( 4, 7)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7,11)( 8, 9),   ( 1, 6)( 2, 5)( 3, 8)( 4, 7)( 9,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12), ( 1, 5)( 2, 6)( 3, 8)( 4, 7)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,12)( 3,10)( 4,11),   ( 1,12, 5, 2, 9, 6)( 3,10, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 9,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10), ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,11, 7)( 3,10, 8)( 4,12, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 7,11)( 3, 8,10)( 4, 6,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 6)( 4, 5)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 6)( 4, 5)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8),   ( 1,12)( 2,11)( 3,10)( 4, 9)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8),   ( 1, 4)( 2, 3)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 1, 4)( 5, 6)( 7, 8)( 9,12)(10,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 6)( 7, 8)( 9,12)(10,11), ( 5, 9)( 6,12)( 7,10)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9)( 5, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9)( 5, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11),   ( 1, 9, 5)( 2,10, 6)( 3,12, 8)( 4,11, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,10, 6)( 3,12, 8)( 4,11, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 6,10)( 3, 8,12)( 4, 7,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12),   ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,11, 7)( 3,12, 6)( 4,10, 8),   ( 2, 3, 4)( 6, 8, 7)(10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 6,10)( 3, 8,11)( 4, 7,12),   ( 2, 3, 4)( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 1, 9)( 2,12)( 3,11)( 4,10)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12),   ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11), ( 2, 3, 4)( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 6, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 6)( 4, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 6)( 4, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 8)( 4, 6)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 8)( 4, 6)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 8)( 4, 6)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 8)( 4, 6)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,12, 8)( 3,10, 7)( 4,11, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8),   ( 1, 5, 9)( 2, 8,12)( 3, 7,10)( 4, 6,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12),   ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 6,11)( 4, 7,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,12)( 3, 6,11)( 4, 7,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 5, 9)( 2, 7,10, 3, 6,12)( 4, 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 6,10)( 3, 7,11)( 4, 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 1, 5)( 2, 7)( 3, 8)( 4, 6)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 2, 4)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,12, 6)( 3,10, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,12)( 3,10)( 4,11),   ( 1, 9)( 2,10)( 3,12)( 4,11)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,12, 6)( 3,10, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12), ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11)( 6, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10),   ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3, 4)( 6, 7, 8)(10,12,11), ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7, 4, 6, 3, 8)(10,12,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 4, 3)( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7, 4, 6, 3, 8)(10,12,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 4, 3)( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7, 4, 6, 3, 8)(10,12,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 4, 3)( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 3)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 6, 7, 8)(10,12,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11), ( 2, 3)( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11), ( 2, 3)( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 6, 7)(10,12), ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 6, 7, 8)(10,12,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 3, 4)( 5, 9)( 6,11)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,10)( 7,11)( 8,12), ( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,10)( 7,12)( 8,11), ( 6, 7)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 2, 4)( 6, 7)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 6, 7)(10,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), (11,12),   ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(11,12), ( 1, 5)( 2, 7)( 3, 6)( 4, 8)(11,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 2, 3)( 6, 7), ( 3, 4)( 7, 8),   (11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 7), ( 1, 9)( 2,11)( 3,12)( 4,10)( 6, 8),   ( 1, 9)( 2,12, 3,10, 4,11)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 2, 3)( 7, 8)(10,11), ( 3, 4)( 7, 8)(11,12), ( 6, 7, 8)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,11)( 8,12),   ( 3, 4)(11,12), ( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 5, 9)( 6,11)( 7,12)( 8,10), ( 3, 4)( 5, 9)( 6,12)( 7,11)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,11)( 8,12),   ( 2, 3)( 7, 8)(11,12), ( 3, 4)( 6, 7)(11,12), ( 6, 8, 7)(10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 3, 4)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 1, 6, 9)( 2, 5,10)( 3, 8,11)( 4, 7,12),   ( 1,11, 4, 9)( 2,12, 3,10)( 5, 7, 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 3)( 2, 4)( 9,11)(10,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,11)( 8,12),   ( 3, 4)( 7, 8)(11,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 1, 8, 9)( 2, 7,10)( 3, 6,11)( 4, 5,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 9,12)(10,11), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 3, 4)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 1, 6, 9)( 2, 5,10)( 3, 8,12)( 4, 7,11), ( 1,11, 3,10, 2,12, 4, 9)( 5, 7)    ( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)( 9,10), ( 1, 3)( 2, 4)( 7, 8)( 9,11)(10,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 7, 6, 8)( 9,11,10,12),   ( 5, 9)( 6,10)( 7,12)( 8,11), ( 3, 4)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11),   ( 1,12, 7)( 2,11, 8)( 3, 9, 6, 4,10, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6)( 9,10), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 3, 4)( 5, 6)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11), ( 5,11)( 6,12)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 8)( 6, 7)( 9,12)(10,11),   ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11),   ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 2, 3)( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,10, 5)( 2, 9, 6)( 3,12, 7)( 4,11, 8), ( 1, 7, 3, 5)( 2, 8, 4, 6)( 9,11)    (10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 6, 4, 7, 3, 8, 2, 5)( 9,10)    (11,12), ( 1, 7, 3, 5)( 2, 8, 4, 6)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 6, 8)( 9,10)(11,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,12, 5)( 2,11, 6)( 3,10, 7)( 4, 9, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,10, 5)( 2, 9, 6)( 3,12, 7)( 4,11, 8), ( 1, 7, 3, 5)( 2, 8, 4, 6)( 9,11)    (10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12),   ( 1, 7, 4, 5)( 2, 8, 3, 6)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 9,12)(10,11), ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12),   ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,12, 5)( 2,11, 6)( 3,10, 7)( 4, 9, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 7)( 2, 8)( 3, 5)( 4, 6)( 9,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8)( 9,10), ( 1, 5)( 2, 6)( 3, 7)( 4, 8)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 5)( 2, 6)( 3, 8)( 4, 7)(11,12),   ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12), ( 2, 3)( 5,11)( 6,12)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 1, 4)( 2, 3)( 5, 7)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 6, 8), ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 1,10, 4, 9)( 2,11, 3,12)( 5, 6, 8, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,10)(11,12), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 2, 4)( 5, 6, 8, 7)( 9,10,11,12), ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10),   ( 1, 3)( 5,11, 8, 9)( 6,10, 7,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 6, 8, 7)( 9,12,11,10), ( 5, 8)( 6, 7)( 9,11)(10,12),   ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,12, 8)( 4,11, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 1, 2)( 3, 4)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,10)(11,12), ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,12, 8)( 4,11, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2,12)( 3, 9)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2,12)( 3, 9)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 6, 8, 7)( 9,10,11,12),   ( 1, 4)( 2, 3)( 6, 7)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 6, 7)( 9,12)(10,11), ( 5, 6, 8, 7)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 1, 9, 5)( 2,12, 6)( 3,11, 8)( 4,10, 7),   ( 1, 6, 2, 8, 3, 7, 4, 5)( 9,10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 3, 4)( 9,10,11,12), ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 6, 8, 7)( 9,10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 1, 9, 5)( 2,12, 6)( 3,11, 8)( 4,10, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10),   ( 1, 3)( 2, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,11)(10,12), ( 5, 8)( 6, 7)( 9,11)(10,12),   ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,11)(10,12), ( 1,10)( 2, 9)( 3,12)( 4,11),   ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,10, 5)( 2, 9, 6)( 3,12, 8)( 4,11, 7),   ( 1,12, 5)( 2,11, 6)( 3,10, 8)( 4, 9, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 1, 4)( 2, 3)( 6, 7)( 9,12)(10,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 6, 7)( 9,12)(10,11), ( 5, 8)( 6, 7)( 9,11)(10,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7),   ( 1,12, 5)( 2,11, 6)( 3,10, 8)( 4, 9, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,12, 8)( 3,11, 6)( 4,10, 7),   ( 1, 6, 3, 7, 4, 5)( 2, 8)( 9,10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3, 4)( 5, 6, 7)( 9,11,10), ( 1, 5, 4, 7, 3, 6)( 2, 8)( 9,11,10)    , ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6,10)( 2, 8,12)( 3, 7, 9)( 4, 5,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6,10)( 2, 8,12)( 3, 7, 9)( 4, 5,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6, 8, 7)( 9,10,11,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10, 5)( 2, 9, 6)( 3,12, 7)( 4,11, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,10)( 2, 6, 9)( 3, 7,12)( 4, 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,11)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2, 9)( 3,12)( 4,11)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 8)( 6, 7)( 9,11)(10,12),   ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,12)( 4,10), ( 1,10)( 2,12)( 3, 9)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 9,12)(10,11), ( 1,10)( 2,12)( 3, 9)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12), ( 1, 3)( 2, 4)( 9,10)(11,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 9,10)(11,12), ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 6, 7)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 6, 7)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 7)( 6, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1,10)( 2,12)( 3, 9)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1,10)( 2,12)( 3, 9)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 3)( 2, 4)( 5, 6)( 7, 8)( 9,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 3)( 2, 4)( 5, 6)( 7, 8)( 9,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 8)( 6, 7)( 9,12)(10,11),   ( 1, 3)( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 6, 8, 7)( 9,11,12,10), ( 5, 8)( 6, 7)( 9,12)(10,11),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 2, 3)( 7, 8)(11,12),   ( 2, 3)( 5,10)( 6, 9)( 7,11)( 8,12), ( 2, 3)( 5, 7, 6, 8)( 9,11,10,12),   ( 1, 2, 3)( 6, 8, 7)( 9,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 6, 8)( 9,11), ( 2, 3)( 7, 8)(11,12),   ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 1, 2)( 3, 4)( 5,11, 7, 9)( 6,10, 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 9, 7,11)( 6,12, 8,10),   ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5,10)( 6, 9)( 7,12)( 8,11),   ( 5, 7)( 6, 8)( 9,11)(10,12), ( 1, 2)( 3, 4)( 5,11, 7, 9)( 6,12, 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 3, 4)( 5,10)( 6, 9)( 7,12)( 8,11),   ( 5, 7)( 6, 8)( 9,11)(10,12), ( 1, 2)( 3, 4)( 5,11, 7, 9)( 6,12, 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12),   ( 2, 3)( 5, 7)( 6, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5,10)( 6, 9)( 7,12)( 8,11), ( 5,11)( 6,12)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 8)( 6, 7)( 9,12)(10,11),   ( 2, 4)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 2, 3)( 5,11, 6,12)( 7,10, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,11, 6,12)( 7,10, 8, 9), ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,12)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12),   ( 5, 7, 6, 8)( 9,11,10,12), ( 1, 2)( 3, 4)( 5,11, 7,10, 6,12, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 7, 8)( 9,11)(10,12), ( 5, 6)( 7, 8)( 9,10)(11,12),   ( 5, 7, 6, 8)( 9,11,10,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,10)( 7,11)( 8,12),   ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 2, 4)( 5, 7)( 6, 8)( 9,11)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5, 8)( 6, 7)( 9,12)(10,11),   ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5,11)( 6,12)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,10)(11,12), ( 5,11)( 6,12)( 7, 9)( 8,10)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 5,11)( 6,12)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,12)(10,11), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,10)( 7,11)( 8,12), ( 3, 4)( 7, 8)(11,12),   ( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12), ( 3, 4)( 5,11, 6,12)( 7,10, 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4), ( 5, 6)( 9,10), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 7, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,10)( 7,11)( 8,12), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 5,10)( 6, 9)( 7,12)( 8,11), ( 2, 4)( 5, 7, 6, 8)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 7)( 6, 8)( 9,11)(10,12), ( 5, 6)( 9,10),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11), ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 3, 4)( 9,11,12,10), ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,12)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7)( 9,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5, 8)( 6, 7)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 8)( 6, 7)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7,11)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7,11)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 6)( 4, 5), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,11)( 6,10)( 7,12)( 8, 9)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 8)( 6, 7)( 9,11)(10,12), ( 5,11)( 6,10)( 7,12)( 8, 9)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,10, 8)( 3,11, 6)( 4, 9, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 8,10)( 3, 6,11)( 4, 7, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 1, 4)( 5, 7)( 6, 8)( 9,11)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 7)( 6, 8)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,12)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6, 4, 5)( 2, 7, 3, 8)( 9,10,11,12),   ( 1, 7, 9)( 2, 5,12)( 3, 6,10)( 4, 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 4, 3)( 5,11, 6, 9)( 7,12, 8,10),   ( 1, 5, 4, 6)( 2, 8, 3, 7)( 9,12,11,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,10, 8)( 3,11, 6)( 4, 9, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 8,10)( 3, 6,11)( 4, 7, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 8)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 8)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 1, 2)( 5,10)( 6,11)( 7, 9)( 8,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 7)( 6, 8)( 9,10)(11,12), ( 5, 9)( 6,12)( 7,10)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12),   ( 1, 2)( 6, 7)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 6, 7)( 9,11), ( 5, 6, 8, 7)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 5)( 4, 6)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7, 9)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7, 9)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 6, 8, 7)( 9,10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6, 8, 7)( 9,10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,11)( 6,10)( 7,12)( 8, 9)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 8)( 6, 7)( 9,11)(10,12),   ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12), ( 1,11)( 2, 9)( 3,12)( 4,10),   ( 1, 3, 2, 4)( 5, 8)( 6, 7)( 9,10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 9)( 2,11)( 3,10)( 4,12),   ( 1, 3, 2, 4)( 5, 8)( 6, 7)( 9,10,11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 6)( 3, 8)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 6)( 3, 8)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 7)( 4, 8)( 9,12),   ( 1, 3)( 2, 4)( 5, 8)( 6, 7)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 6)( 4, 5), ( 1, 3)( 2, 4)( 5, 8)( 6, 7)( 9,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7, 4, 5)( 2, 6, 3, 8)( 9,12)(10,11),   ( 1, 6)( 2, 5)( 3, 7)( 4, 8)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 4, 3)( 5, 8, 7, 6)(10,11), ( 1, 5, 4, 7)( 2, 8, 3, 6)( 9,12)    (10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 6,12)( 3, 7,11)( 4, 8,10),   ( 1,12)( 2, 9)( 3,11)( 4,10)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,11)( 8,10),   ( 1, 5, 9)( 2, 6,12)( 3, 7,11)( 4, 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12), ( 1,11)( 2, 9)( 3,12)( 4,10)( 7, 8)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 7, 8)( 9,11)(10,12), ( 1, 9)( 2,11)( 3,10)( 4,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6, 4, 5)( 2, 7, 3, 8)( 9,10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12),   ( 1, 5, 4, 6)( 2, 8, 3, 7)( 9,12,11,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11), ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 5)( 4, 7), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10), ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 4, 3)( 9,11,10,12), ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 6)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 6)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10),   ( 1, 6, 9)( 2, 7,12)( 3, 8,11)( 4, 5,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 5)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 5)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10, 6)( 2,11, 5)( 3, 9, 8)( 4,12, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6,10)( 2, 5,11)( 3, 8, 9)( 4, 7,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 5)( 4, 7)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 5)( 4, 7)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 7)( 3, 5)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 7)( 3, 5)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7)( 9,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 8)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 8)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 7)( 6, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 6)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 6)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 6)( 4, 8)( 9,10), ( 1, 8)( 2, 5)( 3, 6)( 4, 7)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7), ( 1, 4)( 7, 8)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,12)( 3,11)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5, 7)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 7)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6, 3, 7, 2, 5)( 4, 8)( 9,10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 3)( 5, 7, 6)( 9,10,11),   ( 1, 5, 2, 7, 3, 6)( 4, 8)( 9,11,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,10)( 3, 9)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7, 3, 5)( 2, 6, 4, 8)( 9,12)(10,11),   ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8), ( 1, 6)( 2, 7)( 3, 8)( 4, 5),   ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)(10,11),   ( 1, 3)( 2, 4)( 5, 7)( 6, 8)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8)(10,11),   ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,11)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,11)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 6)( 2,10, 7)( 3,11, 8)( 4, 9, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6,12)( 2, 7,10)( 3, 8,11)( 4, 5, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8)( 9,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7,11)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5,10)( 6,12)( 7,11)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10, 7)( 2,11, 5)( 3,12, 6)( 4, 9, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7,10)( 2, 5,11)( 3, 6,12)( 4, 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,12, 6)( 3,10, 8)( 4,11, 7),   ( 1,12, 5, 2, 9, 6)( 3,11, 8, 4,10, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,12)(10,11),   ( 1, 5, 9)( 2, 6,12)( 3, 8,10)( 4, 7,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11)( 5, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,10, 8)( 3, 9, 7)( 4,11, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 8,10)( 3, 7, 9)( 4, 6,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 6, 8, 7)( 9,10,11,12),   ( 1, 2)( 3, 4)( 5,11, 8, 9)( 6,10, 7,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 5, 6, 8, 7)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 3, 4)( 5, 6, 8, 7)( 9,10,11,12),   ( 1, 2)( 3, 4)( 5,11, 8, 9)( 6,10, 7,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 3, 4)( 5, 6, 8, 7)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,10, 8)( 3,11, 6)( 4, 9, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 8,10)( 3, 6,11)( 4, 7, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,10)( 2,11)( 3,12)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,10, 5)( 2,12, 8)( 3,11, 7)( 4, 9, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,10)( 2, 8,12)( 3, 7,11)( 4, 6, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 8)( 6, 7)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 8)( 6, 7)( 9,11)(10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,11)( 6,10)( 7,12)( 8, 9)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 8)( 6, 7)( 9,11)(10,12),   ( 2, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6,10)( 7,12)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7, 4, 5)( 2, 6, 3, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 7)( 6, 8), ( 1, 5, 4, 7)( 2, 8, 3, 6)( 9,12)    (10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,11)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5,12)( 6, 9)( 7,11)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 7)( 3, 6)( 4, 5)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 7)( 3, 6)( 4, 5)( 9,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 6)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5,10)( 6, 9)( 7,11)( 8,12),   ( 1, 2)( 3, 4)( 5,12, 7,11, 8,10, 6, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 6, 7)( 9,12)(10,11), ( 5, 6, 8, 7)( 9,10,11,12),   ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 6, 7)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 6, 7)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11),   ( 1, 6, 9)( 2, 7,12)( 3, 5,10)( 4, 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 8)( 4, 6),   ( 1,10, 5)( 2,12, 7)( 3,11, 8)( 4, 9, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 7)( 3, 8)( 4, 6), ( 5,10)( 6, 9)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12), ( 5,12)( 6,11)( 7, 9)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 8)( 6, 7)( 9,11)(10,12),   ( 3, 4)( 5,10)( 6, 9)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,12)( 6,11)( 7, 9)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 9 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 7, 8)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 7, 8)( 9,12)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 12 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,12)( 7,10)( 8,11), ( 5, 6, 8, 7)( 9,10,11,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4), ( 5, 6, 8, 7)( 9,10,11,12), ( 5, 9)( 6,12)( 7,10)( 8,11)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9, 5)( 2,11, 6)( 3,10, 7)( 4,12, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 6,11)( 3, 7,10)( 4, 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,12)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,12)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,11)( 3,10)( 4,12),   ( 1,11, 2, 9)( 3,12, 4,10)( 5, 6)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 1, 9)( 2,11)( 3,10)( 4,12),   ( 1,11, 2, 9)( 3,12, 4,10)( 5, 6)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,11)(10,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 1,12, 6)( 2,11, 8)( 3, 9, 5)( 4,10, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 8)( 3, 5)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7)( 9,12), ( 1, 8)( 2, 5)( 3, 6)( 4, 7)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7), ( 1, 3)( 6, 8)( 9,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 1, 6, 9)( 2, 8,12)( 3, 5,11)( 4, 7,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 3)( 5, 6, 8)( 9,12,11), ( 1, 5, 3, 8, 2, 6)( 4, 7)( 9,12,11)    , ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 1,11, 8)( 2, 9, 5)( 3,12, 6)( 4,10, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 6)( 4, 7)(11,12), ( 1, 2)( 5, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 8)(11,12), ( 1, 5)( 2, 8)( 3, 6)( 4, 7)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,11, 6)( 3,10, 7)( 4, 9, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 6,11)( 3, 7,10)( 4, 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5)( 9,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,11, 6)( 3,10, 7)( 4, 9, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 6,11)( 3, 7,10)( 4, 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12, 5)( 2,11, 6)( 3,10, 7)( 4, 9, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5,12)( 2, 6,11)( 3, 7,10)( 4, 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 6)( 4, 7)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 6)( 4, 7)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11), ( 1, 2, 3)( 5,10, 6, 9, 7,12)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 3)( 5, 7, 6)( 9,10,12), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(11,12),   ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5), ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 7)( 3, 5)( 4, 6)( 9,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 7)( 3, 5)( 4, 6)( 9,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11),   ( 1,11, 8)( 2, 9, 5)( 3,12, 6)( 4,10, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7), ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,11)( 7,10)( 8,12), ( 2, 4)( 5, 6)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 9,11), ( 2, 4)( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2, 9)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1,11, 5)( 2, 9, 6)( 3,12, 7)( 4,10, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5, 6)( 7, 8)( 9,11)(10,12),   ( 1, 4)( 5, 7, 6, 8)( 9,12,11,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 7, 6, 8)( 9,12,11,10), ( 5, 6)( 7, 8)( 9,11)(10,12),   ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5, 6)( 7, 8)( 9,11)(10,12),   ( 1, 4)( 5,10)( 6,12)( 7, 9)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 7)( 6, 8)( 9,10)(11,12), ( 5, 6)( 7, 8)( 9,11)(10,12),   ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10),   ( 1, 3)( 5,11, 6, 9)( 7,10, 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 7, 8)( 9,11), ( 5, 9)( 6,11)( 7,10)( 8,12),   ( 1, 3)( 5, 6)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12),   ( 1, 3)( 2, 4)( 5,11, 6, 9)( 7,10, 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 9, 6,11)( 7,12, 8,10),   ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12),   ( 1,11, 6)( 2,12, 8)( 3, 9, 5)( 4,10, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 8)( 3, 5)( 4, 7), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 6, 7)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 6, 7)( 9,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 6, 7)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 6, 7)( 9,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5, 8)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 8)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 9,10)(11,12), ( 1,11)( 2,12)( 3, 9)( 4,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2,12)( 3, 9)( 4,10), ( 1, 2)( 3, 4)( 5, 6)( 9,10)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 7)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 6)( 3, 7)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 9)( 6,11)( 7,10)( 8,12),   ( 1,10)( 2, 9)( 3,11)( 4,12)( 5, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 8)( 3, 6)( 4, 5)( 9,12),   ( 2, 4)( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 5,11)( 6,12)( 7,10)( 8, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5,11)( 6,12)( 7,10)( 8, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 5)( 3, 8)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12), ( 1, 6)( 2, 5)( 3, 8)( 4, 7)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)(11,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 8)( 3, 5)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 8)( 3, 5)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 5)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 7, 8), ( 1, 4)( 7, 8)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 7, 8)( 9,11), ( 1, 9)( 2,12)( 3,10)( 4,11)( 7, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12), ( 1, 4)( 5,12)( 6, 9)( 7,10)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 8)(11,12), ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6), ( 1, 6)( 2, 7)( 3, 8)( 4, 5)(10,12)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(10,12), ( 1, 5)( 2, 8)( 3, 7)( 4, 6)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 8)( 4, 6)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7)( 2, 5)( 3, 8)( 4, 6)(10,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 5,12)( 6, 9)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5,12)( 6, 9)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12), ( 1, 4)( 5,12)( 6,10)( 7, 9)( 8,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 5, 8)( 6, 7)( 9,10)(11,12), ( 5,11)( 6, 9)( 7,10)( 8,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 6, 7)(10,11),   ( 1, 7)( 2, 6)( 3, 5)( 4, 8)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 8)( 6, 7)(10,11), ( 1, 6)( 2, 7)( 3, 8)( 4, 5)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6), ( 1, 4)( 2, 3)( 5, 6)( 7, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8), ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 7)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10)( 5, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 8),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12),   ( 1, 6, 2, 5)( 3, 8, 4, 7)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12), ( 2, 4)( 5, 9)( 6,11)( 7,10)( 8,12),   ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10),   ( 1, 3)( 5, 7, 6, 8)( 9,12,11,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 8, 6, 7)( 9,10,11,12), ( 5, 6)( 7, 8)( 9,11)(10,12),   ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 8),   ( 3, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 6)( 7, 8)( 9,10)(11,12),   ( 1, 3)( 2, 4)( 5, 8)( 6, 7)( 9,12), ( 1, 9)( 2,12)( 3,10)( 4,11)( 6, 8),   ( 3, 4)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11), ( 1,12)( 2, 9)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,12)(10,11), ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11), ( 1, 2)( 3, 4)( 9,12)(10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,12)(10,11), ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 6)( 7, 8)( 9,11)(10,12), ( 1, 2)( 3, 4)( 9,12)(10,11)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,12)(10,11), ( 3, 4)( 5, 6)( 7, 8)( 9,11)(10,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12),   ( 1, 6, 2, 5)( 3, 8, 4, 7)( 9,11,10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 3, 4)( 9,12)(10,11), ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12),   ( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 2, 3)( 5, 6)( 7, 8)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11), ( 1, 4)( 9,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 4)( 9,11), ( 1, 9)( 2,12)( 3,10)( 4,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 8)( 2, 5)( 3, 6)( 4, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 6)( 7, 8)( 9,11)(10,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,12)( 3,10)( 4,11),   ( 1, 6, 9)( 2, 7,12)( 3, 8,10)( 4, 5,11),   ( 1,12)( 2, 9)( 3,10)( 4,11)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 6, 7)( 9,12), ( 1, 6)( 2, 7)( 3, 8)( 4, 5),   ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,12)( 8,10), ( 1, 2)( 6, 7)( 9,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 6, 7)( 9,12), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 7,12)( 2, 6,10)( 3, 8, 9)( 4, 5,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 7,12)( 2, 6,10)( 3, 8, 9)( 4, 5,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 8)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 2, 4)( 5, 8)( 6, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,11)( 4,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,11)( 4,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 9)( 2,11)( 3,10)( 4,12)( 6, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6)( 2, 7)( 3, 8)( 4, 5) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 8)( 3, 7)( 4, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 9 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,11)( 2,12)( 3,10)( 4, 9) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 11 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10)( 5, 6) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2,11)( 3, 9)( 4,10)( 5, 6) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,11)( 3, 6,12)( 4, 7,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5, 9)( 2, 8,11)( 3, 6,12)( 4, 7,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 11 ], [ 4, 5, 9 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 3)( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 3)( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 10 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 12 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,11)( 4,10)( 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1,12)( 2, 9)( 3,11)( 4,10)( 6, 7) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 6,12)( 2, 7, 9)( 3, 8,11)( 4, 5,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 6,12)( 2, 7, 9)( 3, 8,11)( 4, 5,10) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 10 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 9,11), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 12 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 5, 9)( 6,11)( 7,10)( 8,12),   ( 3, 4)( 5,11)( 6, 9)( 7,12)( 8,10),   ( 1, 2)( 3, 4)( 5, 7, 6, 8)( 9,10,11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 8, 6, 7)( 9,12,11,10), ( 3, 4),   ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 2, 4), ( 2, 4)( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4), ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 7, 12 ], [ 4, 8, 10 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 10 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 9 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 10 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 9 ], [ 3, 5, 10 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 11 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5,11)( 6, 9)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( () )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( () )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 12 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 9)( 6,12)( 7,10)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 12 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 3, 4)( 5, 9)( 6,12)( 7,10)( 8,11),   ( 2, 4, 3)( 5,11, 8, 9, 6,12)( 7,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 9,11), ( 3, 4)( 6, 8)(11,12),   ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 3, 4), ( 3, 4)( 5, 9)( 6,11)( 7,10)( 8,12),   ( 3, 4)( 5,11)( 6, 9)( 7,12)( 8,10), ( 1, 2)( 3, 4)( 5, 7)( 6, 8)( 9,12)    (10,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 5, 7)( 6, 8)( 9,12)(10,11), ( 3, 4),   ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 5,11)( 6, 9)( 7,12)( 8,10) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 11 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 10 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 12 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 11 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 11 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 5, 9)( 6,11)( 7,10)( 8,12), ( 2, 4)( 5,11)( 6, 9)( 7,12)( 8,10)  ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 2, 4)( 5, 6)( 7, 8)( 9,11)(10,12), ( 5, 9)( 6,11)( 7,10)( 8,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 10 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 1,10, 3, 9, 2,11)( 4,12)( 5, 6, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2, 3)( 5, 6, 7)( 9,10,11), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,11)( 8,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 7, 9 ], [ 2, 7, 12 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 12 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 10 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 12 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12), ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 11 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 10 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 11 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 9)( 2,10)( 3,11)( 4,12), ( 1, 5)( 2, 6)( 3, 8)( 4, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 8)( 4, 7), ( 5, 9)( 6,10)( 7,12)( 8,11) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 10 ], [ 3, 7, 9 ], [ 3, 7, 11 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 7, 8)(11,12), ( 5, 9)( 6,10)( 7,12)( 8,11),   ( 1, 3)( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 3)( 5, 6)( 9,10), ( 5, 9)( 6,10)( 7,11)( 8,12), ( 7, 8)(11,12)  ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 6, 9 ], [ 1, 6, 11 ], [ 1, 6, 12 ], [ 1, 7, 10 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 11 ], [ 2, 5, 12 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 6, 12 ], [ 2, 7, 9 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 8, 9 ], [ 2, 8, 10 ], [ 2, 8, 12 ], [ 3, 5, 10 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 9 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 11 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 10 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 11 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":false, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 3, 4)( 7, 8)(11,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 9)( 6,10)( 7,11)( 8,12),   ( 3, 4)( 7, 8)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 5, 11 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 11 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 12 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 12 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 11 ] ], "isBinary":true, "isSimple":true, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 2, 3)( 6, 7)(10,11), ( 1,10, 8, 3, 9, 5)( 2,11, 6, 4,12, 7) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)(11,12), ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 2, 3)( 6, 7)(10,11), ( 5, 7)( 6, 8)( 9,11)(10,12),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 3, 4)( 7, 8)( 9,10),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}},
	{"isBlockDesign":true, "v":12, "blocks":[ [ 1, 5, 9 ], [ 1, 5, 10 ], [ 1, 5, 11 ], [ 1, 6, 9 ], [ 1, 6, 10 ], [ 1, 6, 12 ], [ 1, 7, 9 ], [ 1, 7, 11 ], [ 1, 7, 12 ], [ 1, 8, 10 ], [ 1, 8, 11 ], [ 1, 8, 12 ], [ 2, 5, 9 ], [ 2, 5, 10 ], [ 2, 5, 12 ], [ 2, 6, 9 ], [ 2, 6, 10 ], [ 2, 6, 11 ], [ 2, 7, 10 ], [ 2, 7, 11 ], [ 2, 7, 12 ], [ 2, 8, 9 ], [ 2, 8, 11 ], [ 2, 8, 12 ], [ 3, 5, 9 ], [ 3, 5, 11 ], [ 3, 5, 12 ], [ 3, 6, 10 ], [ 3, 6, 11 ], [ 3, 6, 12 ], [ 3, 7, 9 ], [ 3, 7, 10 ], [ 3, 7, 12 ], [ 3, 8, 9 ], [ 3, 8, 10 ], [ 3, 8, 11 ], [ 4, 5, 10 ], [ 4, 5, 11 ], [ 4, 5, 12 ], [ 4, 6, 9 ], [ 4, 6, 11 ], [ 4, 6, 12 ], [ 4, 7, 9 ], [ 4, 7, 10 ], [ 4, 7, 11 ], [ 4, 8, 9 ], [ 4, 8, 10 ], [ 4, 8, 12 ] ], "isBinary":true, "isSimple":true, "blockSizes":[ 3 ], "blockNumbers":[ 48 ], "r":12, "autSubgroup":"GAP://Group( [ ( 1, 5)( 2, 6)( 3, 7)( 4, 8),   ( 1, 9, 5)( 2,10, 6)( 3,11, 7)( 4,12, 8), ( 1, 9)( 2,10)( 3,11)( 4,12),   ( 1,10, 6, 2, 9, 5)( 3,11, 8)( 4,12, 7), ( 1, 7, 4, 6, 2, 8, 3, 5)( 9,11)    (10,12) ] )", "k":[ 1, 1, 1 ], "improper":false, "vType":[ 4, 4, 4 ], "negatives":[ ], "autGroup":"GAP://Group( [ ( 1, 2)( 7, 8)(11,12), ( 1, 3)( 2, 4)( 7, 8)( 9,11)(10,12),   ( 1, 5)( 2, 6)( 3, 7)( 4, 8), ( 5, 7, 6, 8)( 9,12,10,11),   ( 5, 9)( 6,10)( 7,11)( 8,12), ( 3, 4)( 7, 8)( 9,10),   ( 5, 6)( 7, 8)( 9,10)(11,12) ] )", "tSubsetStructure":{"t":2}}]}
